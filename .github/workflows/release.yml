name: Release

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '**/*.md'
      - '.gitignore'
      - '.editorconfig'
      - 'docs/**'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      packages: write
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: false
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npx semantic-release

    - name: Get released version
      id: get_version
      run: |
        VERSION=$(grep -oP '(?<=<Version>).*(?=</Version>)' Directory.Build.props)
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "version=$VERSION" >> $GITHUB_OUTPUT

  trigger-deployment:
    needs: release
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Trigger deployment
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "New production version ${{ needs.release.outputs.version }} released, triggering production deployment..."
          else
            echo "New beta version ${{ needs.release.outputs.version }} released, triggering development deployment..."
          fi 