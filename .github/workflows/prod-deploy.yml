name: Deploy to Production

on:
  workflow_run:
    workflows: ["Release"]
    types:
      - completed
    branches: [main]

jobs:
  build-test-deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        ref: main
        fetch-depth: 0
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    
    - name: Get latest tag
      id: get_version
      run: |
        git fetch --tags
        VERSION=$(git describe --tags --abbrev=0)
        echo "Latest tag: $VERSION"
        echo "VERSION=${VERSION#v}" >> $GITHUB_ENV
    
    - name: Restore dependencies
      run: dotnet restore CardActions.Api/CardActions.sln
    
    - name: Build
      run: dotnet build CardActions.Api/CardActions.sln --no-restore --configuration Release
    
    - name: Test
      run: dotnet test CardActions.Api/CardActions.sln --no-build --configuration Release
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}/cardactions-api
        tags: |
          type=raw,value=${{ env.VERSION }}
          type=raw,value=latest
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: CardActions.Api
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          VERSION=${{ env.VERSION }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Update Kubernetes deployment file
      run: |
        # Zastąp placeholder w pliku deployment.yaml rzeczywistą nazwą repozytorium i wersją
        sed -i "s|ghcr.io/OWNER/REPO/cardactions-api|ghcr.io/${{ github.repository }}/cardactions-api:${{ env.VERSION }}|g" CardActions.Api/k8s/prod/deployment.yaml
    
    - name: Set up kubeconfig
      uses: azure/k8s-set-context@v3
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.KUBE_CONFIG_PROD }}
      
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f CardActions.Api/k8s/prod/deployment.yaml
        
    - name: Verify deployment
      run: |
        kubectl rollout status deployment/cardactions-api -n production
        
    - name: Notify Deployment Status
      run: |
        echo "Deployment to Production Environment completed - version ${{ env.VERSION }}"
        # Tutaj możesz dodać powiadomienia, np. przez Slack, Teams, itp. 