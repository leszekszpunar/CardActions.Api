name: Pull Request Checks

on:
  pull_request:
    branches: [ main, develop ]
    paths-ignore:
      - '**/*.md'
      - '.gitignore'
      - '.editorconfig'
      - 'docs/**'

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
      continue-on-error: true
    
    - name: Restore
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    - name: Run Tests and Generate Coverage
      id: tests
      run: |
        dotnet test --no-build --configuration Release \
          --collect:"XPlat Code Coverage" \
          --results-directory:./coverage \
          --logger:"html;LogFileName=test-results.html" \
          --logger:"trx;LogFileName=test-results.trx" \
          /p:CollectCoverage=true \
          /p:CoverletOutputFormat=cobertura \
          /p:CoverletOutput=./coverage/ \
          /p:Include="[*]*" \
          /p:Exclude="[*.Tests]*"
        
    - name: Generate Code Coverage Report
      if: success() || failure()
      continue-on-error: true
      uses: danielpalme/ReportGenerator-GitHub-Action@5.2.0
      with:
        reports: 'coverage/**/coverage.cobertura.xml'
        targetdir: 'coveragereport'
        reporttypes: 'HtmlInline;Cobertura;Badges;TeamCitySummary'
        
    - name: Check coverage
      if: success() || failure()
      id: code_coverage
      continue-on-error: true
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: 'coveragereport/Cobertura.xml'
        badge: true
        format: 'markdown'
        output: 'both'
        thresholds: '60 80'
        fail_below_min: true

    - name: Publish Test Results
      if: always()
      continue-on-error: true
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        files: |
          coverage/**/test-results.trx
        report_individual_runs: true
        check_name: "Test Results"

    - name: Create Test Report
      if: always()
      continue-on-error: true
      uses: dorny/test-reporter@v1
      with:
        name: .NET Tests
        path: 'coverage/**/test-results.trx'
        reporter: dotnet-trx
        fail-on-error: false

    - name: Upload Test Results
      if: always()
      continue-on-error: true
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          coverage/**/test-results.html
          coverage/**/test-results.trx
        retention-days: 14

    - name: Upload Coverage Report
      if: always()
      continue-on-error: true
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report
        path: coveragereport/
        retention-days: 14

    - name: Add Coverage PR Comment
      if: always()
      continue-on-error: true
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        recreate: true
        message: |
          ## 📊 Code Coverage Report
          
          ${{ steps.code_coverage.outputs.markdown || 'Coverage report generation failed. Please check the workflow logs for details.' }}
          
          ### 🔍 Details
          - Full coverage report is available in the artifacts
          - Test results are available in the artifacts
          - Minimum required coverage: 60%
          - Target coverage: 80%
          
          > Note: PRs with coverage below 60% will be blocked from merging.
          
          ### 📈 Test Results
          Szczegółowe wyniki testów są dostępne w zakładce "Checks" tego PR.
          
          #### Raporty
          - Test Results Report: Zobacz zakładkę "Checks" > "Test Results"
          - Detailed .NET Tests: Zobacz zakładkę "Checks" > ".NET Tests"
          - HTML Report: Dostępny w artifacts (test-results.html)
          - TRX Report: Dostępny w artifacts (test-results.trx)
          
          ${steps.tests.outcome == 'failure' && '⚠️ **UWAGA**: Testy nie przeszły! Sprawdź szczegóły w zakładce "Checks".' || ''} 