name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '**/*.md'
      - '.gitignore'
      - '.editorconfig'
      - 'docs/**'

permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write
  id-token: write
  pages: write
  deployments: write

# Konfiguracja środowiska
env:
  DOCS_PATH: 'docs'
  GITHUB_PAGES_URL: '${{ github.repository_owner }}.github.io'
  REPOSITORY_NAME: '${{ github.event.repository.name }}'

jobs:
  # 1. Build i testy
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    
    - name: Build and Test
      run: |
        dotnet restore
        dotnet build --no-restore --configuration Release
        dotnet test --no-build --configuration Release
        dotnet publish src/CardActions.Api/CardActions.Api.csproj -c Release -o publish

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: api-artifact
        path: publish/
        retention-days: 1

  # 2. Semantic Release
  release:
    needs: build
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semantic.outputs.new_release_version }}
      channel: ${{ github.ref == 'refs/heads/main' && 'latest' || 'beta' }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: false
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'
    
    - name: Install dependencies
      run: |
        npm install --no-package-lock --no-save \
          semantic-release@21.0.1 \
          @semantic-release/commit-analyzer \
          @semantic-release/release-notes-generator \
          @semantic-release/github \
          @semantic-release/exec
    
    - name: Semantic Release
      id: semantic
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        npx semantic-release
        VERSION=$(git describe --tags --abbrev=0)
        echo "new_release_version=${VERSION#v}" >> $GITHUB_OUTPUT

  # 3. Build i push Docker image
  docker:
    needs: release
    if: needs.release.outputs.version != ''
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: api-artifact
        path: publish/
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}/cardactions-api
        tags: |
          type=raw,value=${{ needs.release.outputs.version }}
          type=raw,value=${{ needs.release.outputs.channel }}
          type=sha,prefix=${{ needs.release.outputs.channel }}-
        flavor: |
          latest=auto
          prefix=
          suffix=
        labels: |
          org.opencontainers.image.title=CardActions API
          org.opencontainers.image.description=Card Actions API for Millennium Project
          org.opencontainers.image.version=${{ needs.release.outputs.version }}
          org.opencontainers.image.created=${{ github.event.repository.updated_at }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.version.channel=${{ needs.release.outputs.channel }}
    
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: publish/
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  # 4. Deploy dokumentacji do GitHub Pages
  deploy-docs:
    needs: release
    if: needs.release.outputs.version != ''
    runs-on: ubuntu-latest
    # Add specific permissions for this job
    permissions:
      pages: write
      id-token: write
      contents: read
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
      url: https://${{ env.GITHUB_PAGES_URL }}/${{ env.REPOSITORY_NAME }}/${{ github.ref == 'refs/heads/main' && '' || 'dev' }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
      with:
        enablement: true
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build documentation
      run: |
        mkdir -p docs-build
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          cp -r ${{ env.DOCS_PATH }}/* docs-build/
        else
          mkdir -p docs-build/dev
          cp -r ${{ env.DOCS_PATH }}/* docs-build/dev/
        fi
        
        cat > docs-build/config.json << EOF
        {
          "env": "${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}",
          "version": "${{ needs.release.outputs.version }}",
          "channel": "${{ needs.release.outputs.channel }}",
          "apiUrl": "ghcr.io/${{ github.repository }}/cardactions-api:${{ needs.release.outputs.version }}"
        }
        EOF
    
    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: docs-build
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  # 5. Konfiguracja środowiska
  deploy:
    needs: [docker, release]
    if: needs.release.outputs.version != ''
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
      url: https://ghcr.io/${{ github.repository }}/cardactions-api:${{ needs.release.outputs.version }}
    steps:
    - name: Create Deployment Config
      run: |
        cat > deployment.json << EOF
        {
          "version": "${{ needs.release.outputs.version }}",
          "channel": "${{ needs.release.outputs.channel }}",
          "environment": "${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}",
          "dockerImage": "ghcr.io/${{ github.repository }}/cardactions-api:${{ needs.release.outputs.version }}",
          "docsUrl": "https://${{ env.GITHUB_PAGES_URL }}/${{ env.REPOSITORY_NAME }}/${{ github.ref == 'refs/heads/main' && '' || 'dev' }}"
        }
        EOF
    
    - name: Upload Deployment Config
      uses: actions/upload-artifact@v4
      with:
        name: deployment-config-${{ needs.release.outputs.channel }}
        path: deployment.json
        retention-days: 30 