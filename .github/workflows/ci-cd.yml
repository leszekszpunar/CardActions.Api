name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '**/*.md'
      - '.gitignore'
      - '.editorconfig'
      - 'docs/**'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semantic.outputs.new_release_version }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    
    - name: Semantic Release
      id: semantic
      uses: cycjimmy/semantic-release-action@v4
      with:
        extra_plugins: |
          @semantic-release/changelog
          @semantic-release/git
        branch: ${{ github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build
      run: |
        dotnet restore
        dotnet build --no-restore --configuration Release
        dotnet publish src/CardActions.Api/CardActions.Api.csproj -c Release -o publish

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: api-artifact
        path: publish/

  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}/cardactions-api
        tags: |
          type=raw,value=${{ needs.build.outputs.version }},enable=${{ needs.build.outputs.version != '' }}
          type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
          type=raw,value=develop,enable=${{ github.ref == 'refs/heads/develop' }}
    
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-dev:
    if: github.ref == 'refs/heads/develop'
    needs: docker
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Create deployment package
      run: |
        mkdir -p deploy
        cp docker-compose.yml deploy/
        echo "DOCKER_IMAGE=ghcr.io/${{ github.repository }}/cardactions-api:develop" > deploy/.env
    
    - name: Upload deployment package
      uses: actions/upload-artifact@v4
      with:
        name: deploy-dev
        path: deploy/

  deploy-prod:
    if: github.ref == 'refs/heads/main'
    needs: [build, docker]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Create deployment package
      run: |
        mkdir -p deploy
        cp docker-compose.yml deploy/
        echo "DOCKER_IMAGE=ghcr.io/${{ github.repository }}/cardactions-api:${{ needs.build.outputs.version }}" > deploy/.env
    
    - name: Upload deployment package
      uses: actions/upload-artifact@v4
      with:
        name: deploy-prod
        path: deploy/ 